#!/bin/bash

stage="$1"
destination="$2"
arch="$3"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling gcc for $arch at $destination - stage: $stage"

download_dir="$destination/packages"
destination_dir="$destination/dist"

cd $download_dir
if [ ! -d "gcc-6.1.0" ]; then
  wget http://www.netgull.com/gcc/releases/gcc-6.1.0/gcc-6.1.0.tar.gz
  tar -xf gcc-6.1.0.tar.gz
fi

cd "$download_dir/gcc-6.1.0"
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

if [ ! -d "gmp" ]; then
  wget https://gmplib.org/download/gmp/gmp-6.1.0.tar.xz
  tar -xf gmp-6.1.0.tar.xz
  mv gmp-6.1.0 gmp
fi

if [ ! -d "mpfr" ]; then
  wget http://www.mpfr.org/mpfr-current/mpfr-3.1.4.tar.xz
  tar -xf mpfr-3.1.4.tar.xz
  mv mpfr-3.1.4 mpfr
fi

if [ ! -d "mpc" ]; then
  wget ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz
  tar -xf mpc-1.0.3.tar.gz
  mv mpc-1.0.3 mpc
fi

if [ -d "build" ]; then
  rm -rf "build"
fi
mkdir "build"
cd "$download_dir/gcc-6.1.0/build"

target=$(get_target_for_arch $arch)

#Without this gcc will fail to install
if [ ! -d "$destination_dir/usr/include" ]; then
  mkdir -p "$destination_dir/usr/include"
fi

if [ "x$stage" == "xstage1" ]; then
  echo ../configure --target=$target --disable-multilib --prefix=$destination_dir --disable-nls --disable-threads --disable-shared --enable-__cxa_atexit -without-headers --enable-clocale=gnu --enable-languages=c --with-sysroot=$destination_dir
  ../configure --target=$target --disable-multilib --prefix=$destination_dir --disable-nls --disable-threads --disable-shared --enable-__cxa_atexit -without-headers --enable-clocale=gnu --enable-languages=c --with-sysroot=$destination_dir
  make all-gcc
  make install-gcc
elif [ "x$stage" == "xstage2" ]; then
  echo ../configure --target=$target --disable-multilib --prefix=$destination_dir --disable-nls --disable-threads --disable-shared --enable-__cxa_atexit --enable-clocale=gnu --enable-languages=c --with-sysroot=$destination_dir
  ../configure --target=$target --disable-multilib --prefix=$destination_dir --disable-nls --disable-threads --disable-shared --enable-__cxa_atexit --enable-clocale=gnu --enable-languages=c --with-sysroot=$destination_dir
  make all-target-libgcc
  make install-target-libgcc
elif [ "x$stage" == "xstage3" ]; then
  echo ../configure --prefix=$destination_dir --target=$target --disable-multilib --enable-languages=c --enable-shared --disable-libssp --disable-libquadmath --disable-libgomp --disable-libatomic --enable-__cxa_atexit --enable-clocale=gnu --with-sysroot=$destination_dir
  ../configure --prefix=$destination_dir --target=$target --disable-multilib --enable-languages=c --enable-shared --disable-libssp --disable-libquadmath --disable-libgomp --disable-libatomic --enable-__cxa_atexit --enable-clocale=gnu --with-sysroot=$destination_dir

  make all-gcc
  make install-gcc

  make all-target-libgcc
  make install-target-libgcc

  make
  make prefix=$destination_dir install
elif [ "x$stage" == "xstage4" ]; then
  echo ../configure --prefix=$destination_dir --target=$target --disable-multilib --enable-languages=c,c++ --enable-shared --enable-threads=posix --disable-checking --enable-__cxa_atexit --enable-clocale=gnu --with-sysroot=$destination_dir libc_cv_forced_unwind=yes
  ../configure --prefix=$destination_dir --target=$target --disable-multilib --enable-languages=c,c++ --enable-shared --enable-threads=posix --disable-checking --enable-__cxa_atexit --enable-clocale=gnu --with-sysroot=$destination_dir libc_cv_forced_unwind=yes

  make -j4
  make prefix=$destination_dir install
fi

cd ..
touch "done-$stage.lock"
