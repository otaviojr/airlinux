#!/bin/bash

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling gcc for $arch at $destination - stage: $stage"

download_dir="$destination/packages"
destination_dir="$destination/dist"

cd $download_dir
if [ ! -d "gcc-6.1.0" ]; then
  wget http://www.netgull.com/gcc/releases/gcc-6.1.0/gcc-6.1.0.tar.gz
  tar -xf gcc-6.1.0.tar.gz
fi

cd "$download_dir/gcc-6.1.0"
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

if [ ! -d "gmp" ]; then
  wget https://gmplib.org/download/gmp/gmp-6.1.0.tar.xz
  tar -xf gmp-6.1.0.tar.xz
  mv gmp-6.1.0 gmp
fi

if [ ! -d "mpfr" ]; then
  wget http://www.mpfr.org/mpfr-current/mpfr-3.1.4.tar.xz
  tar -xf mpfr-3.1.4.tar.xz
  mv mpfr-3.1.4 mpfr
fi

if [ ! -d "mpc" ]; then
  wget ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz
  tar -xf mpc-1.0.3.tar.gz
  mv mpc-1.0.3 mpc
fi

if [ -d "build" ]; then
  rm -rf "build"
fi
mkdir "build"
cd "$download_dir/gcc-6.1.0/build"

target=$(get_target_for_arch $arch)
macro_target=$(get_macro_target_for_arch $arch)
prefix=$(get_prefix_for_arch $arch)
cflags=$(get_cflags_for_arch $arch)

#Without this gcc will fail to install
if [ ! -d "$destination_dir/usr/include" ]; then
  mkdir -p "$destination_dir/usr/include"
fi

export PATH=$PATH:$destination_dir/bin

if [ "x$stage" == "xstage1" ]; then
  echo "../configure --target=$target --prefix=$destination_dir --with-glibc-version=2.23 --with-sysroot=$destination_dir --with-newlib --without-headers --with-local-prefix=$destination_dir --with-native-system-header-dir=$destination_dir/include --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++"
  ../configure --target=$target --prefix=$destination_dir --with-glibc-version=2.23 --with-sysroot=$destination_dir --with-newlib --without-headers --with-local-prefix=$destination_dir --with-native-system-header-dir=$destination_dir/include --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++
  make
  make install
elif [ "x$stage" == "xstage2" ]; then
  CC=$prefix-gcc
  CXX=$prefix-g++
  AS=$prefix-as
  LD=$prefix-ld
  AR=$prefix-ar
  RANLIB=$prefix-ranlib
  export CFLAGS="-I$destination_dir/include --sysroot=$destination_dir -isysroot=$destination_dir $cflags"

  echo "../libstdc++-v3/configure --host=$target --prefix=/ --disable-multilib --disable-nls --disable-libstdcxx-threads --disable-libstdcxx-pch --with-gxx-include-dir=$destination_dir/include/c++/6.1.0"
  ../libstdc++-v3/configure --host=$target --prefix=/ --disable-multilib --disable-nls --disable-libstdcxx-threads --disable-libstdcxx-pch --with-gxx-include-dir=$destination_dir/include/c++/6.1.0

  make
  make DESTDIR=$destination_dir install
elif [ "x$stage" == "xstage3" ]; then
  CC=$prefix-gcc
  CXX=$prefix-g++
  AR=$prefix-ar
  RANLIB=$prefix-ranlib

  echo "../configure --target=$target --prefix=$destination_dir --with-local-prefix=$destination_dir --with-native-system-header-dir=/include --enable-languages=c,c++ --disable-libgomp --disable-multilib --enable-shared --with-sysroot=$destination_dir"
  ../configure --target=$target --prefix=$destination_dir --with-local-prefix=$destination_dir --with-native-system-header-dir=/include --enable-languages=c,c++ --disable-libgomp --disable-multilib --enable-shared --with-sysroot=$destination_dir
  make
  make install
elif [ "x$stage" == "xsystem" ]; then
  CC=$prefix-gcc
  CXX=$prefix-g++
  AR=$prefix-ar
  RANLIB=$prefix-ranlib
  CFLAGS="$cflags"
  export PATH=$PATH:$cross_tools/dist/bin

  echo "../configure --host=$target --target=$target --prefix=/ --with-local-prefix=/ --with-native-system-header-dir=/include --enable-languages=c,c++ --disable-libgomp --disable-multilib --enable-shared"
  ../configure --host=$target --target=$target --prefix=/ --with-local-prefix=/ --with-native-system-header-dir=/include --enable-languages=c,c++ --disable-libgomp --disable-multilib --enable-shared
  make
  make DESTDIR=$destination_dir install
fi

cd ..
touch "done-$stage.lock"
