#!/bin/bash

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling libxkbcommon for $arch at $destination - stage: $stage"

current_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

download_dir="$destination/packages"
destination_dir="$destination/dist"
package_dir="$download_dir/libxkbcommon-0.6.1"

cd $download_dir
if [ ! -d "libxkbcommon-0.6.1" ]; then
  wget http://xkbcommon.org/download/libxkbcommon-0.6.1.tar.xz
  tar -xf libxkbcommon-0.6.1.tar.xz
fi

cd $package_dir
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

if [ -d "build" ]; then
  rm -rf "build"
fi
mkdir "build"
cd "$package_dir/build"

target=$(get_target_for_arch $arch)
macro_target=$(get_macro_target_for_arch $arch)
prefix=$(get_prefix_for_arch $arch)
cflags=$(get_cflags_for_arch $arch)
distro=$(get_distro_name)

export CFLAGS="$cflags --sysroot=$destination_dir -I$destination_dir/include"
export LDFLAGS="--sysroot=$destination_dir -L$destination_dir/lib"

export PKG_CONFIG_PATH=$destination_dir/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=$destination_dir
export SYSROOT=$destination_dir

export CC=$prefix-gcc
export AR=$prefix-ar
export AS=$prefix-as
export LD=$prefix-ld
export RANLIB=$prefix-ranlib
export CROSS_COMPILE=$prefix-
export PATH=$PATH:$cross_tools/dist/bin

if [ "x$stage" == "xsystem" ]; then
  echo ../configure --prefix= --host=$target
  ../configure --prefix= --host=$target --with-xkb-config-root=$destination_dir/share/X11/xkb
  make LIBTOOL=$prefix-libtool
  make LIBTOOL=$prefix-libtool DESTDIR=$destination_dir install
fi

cd ..
touch "done-$stage.lock"
