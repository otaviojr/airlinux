#!/bin/bash

#Include our common functions
. ./packages/common/functions

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

distro=$(get_distro_name)

current_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

echo "Creating deploy image"
sudo mkdir $destination/deploy
sudo mkdir $destination/deploy/mount1
sudo mkdir $destination/deploy/mount2
sudo mkdir $destination/deploy/mount3

if [ "x$distro" == "xubuntu" ]; then
  sudo DEBIAN_FRONTEND=noninteractive apt-get -y --force-yes install kpartx
else
  echo "Non debian platform not supported"
  exit 1
fi

size=4585938

if [ -d "$destination/deploy/system.img" ]; then
  rm -Rf "$destination/deploy/system.img"
fi

sudo dd if=/dev/zero of=$destination/deploy/system.img bs=512 count=$size
sudo losetup /dev/loop1 $destination/deploy/system.img
sudo sfdisk /dev/loop1 < $current_dir/config/partitions/$arch.layout
sudo losetup -d /dev/loop1
devices=($(sudo kpartx -v -a $destination/deploy/system.img | sed -n 's|.*\(loop[0-9]*p[0-9]*\).*|\1|gp'))
echo "Creating file system at:"
echo "FAT32: ${devices[0]}"
echo "EXT3: ${devices[1]}"
sudo mkfs.vfat -n 'BOOT' /dev/mapper/${devices[0]}
sudo mkfs.ext3 /dev/mapper/${devices[1]}
sudo mount /dev/mapper/${devices[0]} $destination/deploy/mount1
sudo mount /dev/mapper/${devices[1]} $destination/deploy/mount2

echo "Preparing system files"

#Set /etc files and directories mode
sudo chmod -Rf 644 $destination/dist/etc/*
sudo find $destination/dist/etc -iname '*' -type d -exec chmod 755 {} \;

echo "Copying boot files"
sudo cp -Rf $destination/dist/boot/* $destination/deploy/mount1
echo "Copying system files"
sudo cp -Rf $destination/dist/* $destination/deploy/mount2
sudo umount $destination/deploy/mount1
sudo umount $destination/deploy/mount2
sudo kpartx -d -v $destination/deploy/system.img
