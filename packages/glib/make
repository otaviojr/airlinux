#!/bin/bash

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling glib for $arch at $destination - stage: $stage"

current_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

download_dir="$destination/packages"
destination_dir="$destination/dist"
package_dir="$download_dir/glib-2.49.1"
package_install_dir="$destination/deploy/packages/glib"

cd $download_dir
if [ ! -d "glib-2.49.1" ]; then
  wget http://ftp.gnome.org/pub/gnome/sources/glib/2.49/glib-2.49.1.tar.xz
  tar -xf glib-2.49.1.tar.xz
fi

cd $package_dir
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

patch -p1 -N -i $current_dir/patches/glib_makefile.patch
aclocal
automake

if [ -d "b" ]; then
  rm -rf "b"
fi
mkdir "b"
cd "$package_dir/b"

target=$(get_target_for_arch $arch)
macro_target=$(get_macro_target_for_arch $arch)
prefix=$(get_prefix_for_arch $arch)
cflags=$(get_cflags_for_arch $arch)

distro=$(get_distro_name)

if [ "x$distro" == "xubuntu" ]; then
  sudo apt-get install gtk-doc-tools
  sudo apt-get install libglib2.0-dev
else
  echo "Non debian platform not supported"
  exit 1
fi

export PATH=$PATH:$cross_tools/dist/bin
export ARCH=$macro_target
export CROSS_COMPILE=$prefix-
export LDFLAGS="-L$destination_dir/lib"
export CFLAGS="$cflags --sysroot=$destination_dir -I$destination_dir/include"

#export LIBFFI_CFLAGS="-I$destination_dir/include"
#export LIBFFI_LIBS="-L$destination_dir/lib -lffi"
export PKG_CONFIG_PATH=$destination_dir/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=$destination_dir


if [ "x$stage" == "xsystem" ]; then
  export BUILD_CC=gcc
  export CC=$prefix-gcc
  export AR=$prefix-ar
  export AS=$prefix-as
  export LD=$prefix-ld
  export RANLIB=$prefix-ranlib

  export glib_cv_stack_grows=no
  export glib_cv_uscore=no
  export ac_cv_func_posix_getpwuid_r=yes
  export ac_cv_func_posix_getgrgid_r=yes

  echo "../configure --prefix=/ --host=$target --target=$target --disable-libelf --with-threads=posix"
  ../configure --prefix=/ --host=$target --target=$target --disable-libelf --with-threads=posix
  make LIBTOOL=$prefix-libtool
  make DESTDIR=$destination_dir install
  make DESTDIR=$package_install_dir install
fi

cd ..
touch "done-$stage.lock"
