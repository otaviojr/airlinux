#!/bin/bash

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling udev for $arch at $destination - stage: $stage"

current_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

download_dir="$destination/packages"
destination_dir="$destination/dist"
package_dir="$download_dir/udev-182"

cd $download_dir
if [ ! -d "udev-182" ]; then
  wget https://www.kernel.org/pub/linux/utils/kernel/hotplug/udev-182.tar.xz
  tar -xf udev-182.tar.xz
fi

cd $package_dir
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

patch -p1 -N -i $current_dir/patches/mtd_probe.h.patch

if [ -d "build" ]; then
  rm -rf "build"
fi
mkdir "build"
cd "$package_dir/build"

target=$(get_target_for_arch $arch)
macro_target=$(get_macro_target_for_arch $arch)
prefix=$(get_prefix_for_arch $arch)
cflags=$(get_cflags_for_arch $arch)
ldflags=$(get_ldflags_for_arch $arch)
distro=$(get_distro_name)

export CFLAGS="$cflags --sysroot=$destination_dir -I$destination_dir/include"
export LDFLAGS="$ldflags -L$destination_dir/lib --sysroot=$destination_dir -lrt"
#export BLKID_CFLAGS="-I$destination_dir/include  -I$destination_dir/include/blkid"
#export BLKID_LIBS="-L$destination_dir/lib -lblkid"
#export KMOD_CFLAGS="-I$destination_dir/include"
#export KMOD_LIBS="-L$destination_dir/lib -lkmod"
#export GLIB_CFLAGS="-I$destination_dir/include -I$destination_dir/include/glib-2.0"
#export GLIB_LIBS="-L$destination_dir/lib -lglib-2.0"

export SYSROOT=$destination_dir
export PKG_CONFIG_PATH=$destination_dir/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=$destination_dir

if [ "x$stage" == "xsystem" ]; then
  export CROSS_COMPILE=$prefix-
  export PATH=$PATH:$cross_tools/dist/bin
  export CC=$prefix-gcc
  export AR=$prefix-ar
  export AS=$prefix-as
  export LD=$prefix-ld
  export RANLIB=$prefix-ranlib

  echo "../configure --prefix= --host=$target --disable-introspection --disable-keymap --disable-gudev --with-pci-ids-path=/var/lib/pciutils/pci.ids" --with-sysroot=$destination_dir
  ../configure --prefix= --host=$target --disable-introspection --disable-keymap --disable-gudev --with-pci-ids-path=/var/lib/pciutils/pci.ids --with-sysroot=$destination_dir

  make LIBTOOL=$prefix-libtool
  make LIBTOOL=$prefix-libtool DESTDIR=$destination_dir install
fi

cd ..
touch "done-$stage.lock"
