#!/bin/bash

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling pkg-config for $arch at $destination - stage: $stage"

current_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

download_dir="$destination/packages"
destination_dir="$destination/dist"
package_dir="$download_dir/pkg-config-0.29"

cd $download_dir
if [ ! -d "pkg-config-0.29" ]; then
  wget https://pkg-config.freedesktop.org/releases/pkg-config-0.29.tar.gz
  tar -xf pkg-config-0.29.tar.gz
fi

cd $package_dir
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

if [ -d "build" ]; then
  rm -rf "build"
fi
mkdir "build"
cd "$package_dir/build"

target=$(get_target_for_arch $arch)
macro_target=$(get_macro_target_for_arch $arch)
prefix=$(get_prefix_for_arch $arch)
cflags=$(get_cflags_for_arch $arch)

distro=$(get_distro_name)

if [ "x$stage" == "xsystem" ]; then
  export PATH=$PATH:$destination_dir/bin

  export ARCH=$macro_target
  export CROSS_COMPILE=$prefix-
  export CFLAGS="$cflags --sysroot=$destination_dir"
  export GLIB_CFLAGS="-I$destination_dir/include/glib-2.0"
  export GLIB_LDFLAGS="-L$destination_dir/lib"
  export BUILD_CC=gcc
  export CC=$prefix-gcc
  export AR=$prefix-ar
  export AS=$prefix-as
  export RANLIB=$prefix-ranlib

  echo "../configure --prefix=/ --host=$target"
  ../configure --prefix=/ --host=$target
  make
  make DESTDIR=$destination_dir install
fi

cd ..
touch "done-$stage.lock"
