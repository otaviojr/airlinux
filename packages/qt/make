#!/bin/bash

stage="$1"
destination="$2"
arch="$3"
cross_tools="$4"

#Include our common functions
. ./packages/common/functions

echo "Cross-Compiling qt for $arch at $destination - stage: $stage"

current_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

download_dir="$destination/packages"
destination_dir="$destination/dist"
package_install_dir="$destination/deploy/packages/qt"
package_dir="$download_dir/qt-everywhere-opensource-src-5.7.0"

cd $download_dir
if [ ! -d "qt-everywhere-opensource-src-5.7.0" ]; then
  wget http://download.qt.io/official_releases/qt/5.7/5.7.0/single/qt-everywhere-opensource-src-5.7.0.tar.gz
  tar -xf qt-everywhere-opensource-src-5.7.0.tar.gz
fi

cd $package_dir
if [ -f "done-$stage.lock" ]; then
  echo "Already done. Skiping..."
  exit 0
fi

if [ "x$stage" == "xsystem" ]; then
  patch -p1 -N -i $current_dir/patches/rpi3_qmake.conf.patch
elif [ "x$stage" == "xsystem-nonfree" ]; then
  patch -p1 -N -i $current_dir/patches/rpi3_nonfree_qmake.conf.patch
fi

#GCC 6.1 error when using -isystem - removes it
patch -p1 -N -i $current_dir/patches/gcc-base.conf.patch

if [ -d "build" ]; then
  rm -rf "build"
fi
mkdir "build"
cd "$package_dir/build"

target=$(get_target_for_arch $arch)
qttarget=$(get_qttarget_for_arch $arch)
macro_target=$(get_macro_target_for_arch $arch)
prefix=$(get_prefix_for_arch $arch)
cflags=$(get_cflags_for_arch $arch)
distro=$(get_distro_name)

export CROSS_COMPILE=$cross_tools/dist/bin/$prefix-
export PKG_CONFIG_PATH=$destination_dir/lib/pkgconfig
export PKG_CONFIG_SYSROOT_DIR=$destination_dir
export SYSROOT=$destination_dir

export PATH=$PATH:/tmp/wayland/bin
export QT_WAYLAND_SCANNER=/tmp/wayland/bin/wayland-scanner

if [ "x$stage" == "xsystem" ] || [ "x$stage" == "xsystem-nonfree" ]; then
  echo "../configure -prefix / -extprefix $destination_dir -hostprefix $destination_dir -testsdir /share/qt/tests -examplesdir /share/qt/examples -sysconfdir /etc/qt -datadir /share/qt -archdatadir /share/qt -opengl es2 -device $qttarget-g++ -device-option CROSS_COMPILE=$cross_tools/dist/bin/$prefix- -sysroot $destination_dir -opensource -confirm-license -optimized-qmake -reduce-exports -release -make libs -dbus-linked -journald -force-pkg-config -no-xcb -L$destination_dir/opt/vc/lib -v"
  ../configure -prefix / -extprefix $destination_dir -hostprefix $destination_dir -testsdir /share/qt/tests -examplesdir /share/qt/examples -sysconfdir /etc/qt -datadir /share/qt -archdatadir /share/qt -opengl es2 -device $qttarget-g++ -device-option CROSS_COMPILE=$cross_tools/dist/bin/$prefix- -sysroot $destination_dir -opensource -confirm-license -optimized-qmake -reduce-exports -release -make libs -dbus-linked -journald -force-pkg-config -no-xcb -L$destination_dir/opt/vc/lib
  make
  make INSTALL_ROOT=/tmp/qt install

  #System
  sudo cp -Rf /tmp/qt/$destination_dir/bin/* $destination_dir/bin
  sudo cp -Rf /tmp/qt/$destination_dir/include/* $destination_dir/include
  sudo cp -Rf /tmp/qt/$destination_dir/lib/* $destination_dir/lib
  sudo cp -Rf /tmp/qt/share/qt $destination_dir/share

  #Package
  sudo cp -Rf /tmp/qt/$destination_dir/bin/* $package_install_dir/bin
  sudo cp -Rf /tmp/qt/$destination_dir/include/* $package_install_dir/include
  sudo cp -Rf /tmp/qt/$destination_dir/lib/* $package_install_dir/lib
  sudo cp -Rf /tmp/qt/share/qt $package_install_dir/share
fi

cd ..
touch "done-$stage.lock"
